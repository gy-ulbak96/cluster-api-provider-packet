apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
    control-plane: controller-manager
  name: cluster-api-provider-packet-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-packet-system/cluster-api-provider-packet-serving-cert
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
    cluster.x-k8s.io/v1beta1: v1beta1
  name: packetclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: cluster-api-provider-packet-webhook-service
          namespace: cluster-api-provider-packet-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: PacketCluster
    listKind: PacketClusterList
    plural: packetclusters
    shortNames:
    - pcl
    singular: packetcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this PacketCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: PacketCluster ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: PacketCluster is the Schema for the packetclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PacketClusterSpec defines the desired state of PacketCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              facility:
                description: Facility represents the Packet facility for this cluster
                type: string
              metro:
                description: Metro represents the Packet metro for this cluster
                type: string
              projectID:
                description: ProjectID represents the Packet Project where this cluster
                  will be placed into
                type: string
              vipManager:
                default: CPEM
                description: VIPManager represents whether this cluster uses CPEM
                  or kube-vip to manage its vip for the api server IP
                enum:
                - CPEM
                - KUBE_VIP
                type: string
            required:
            - projectID
            - vipManager
            type: object
          status:
            description: PacketClusterStatus defines the observed state of PacketCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the PacketCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                description: Ready denotes that the cluster (infrastructure) is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-packet-system/cluster-api-provider-packet-serving-cert
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
    cluster.x-k8s.io/v1beta1: v1beta1
  name: packetmachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: cluster-api-provider-packet-webhook-service
          namespace: cluster-api-provider-packet-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: PacketMachine
    listKind: PacketMachineList
    plural: packetmachines
    shortNames:
    - pma
    singular: packetmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this PacketMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Packet instance state
      jsonPath: .status.instanceState
      name: State
      type: string
    - description: Machine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Packet instance ID
      jsonPath: .spec.providerID
      name: InstanceID
      type: string
    - description: Machine object which owns with this PacketMachine
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: PacketMachine is the Schema for the packetmachines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PacketMachineSpec defines the desired state of PacketMachine.
            properties:
              billingCycle:
                description: DeviceCreateInputBillingCycle The billing cycle of the
                  device.
                type: string
              facility:
                description: Facility represents the Packet facility for this machine.
                  Override from the PacketCluster spec.
                type: string
              hardwareReservationID:
                description: HardwareReservationID is the unique device hardware reservation
                  ID, a comma separated list of hardware reservation IDs, or `next-available`
                  to automatically let the Packet api determine one.
                type: string
              ipxeURL:
                description: IPXEUrl can be used to set the pxe boot url when using
                  custom OSes with this provider. Note that OS should also be set
                  to "custom_ipxe" if using this value.
                type: string
              machineType:
                type: string
              metro:
                description: Metro represents the Packet metro for this machine Override
                  from the PacketCluster spec.
                type: string
              os:
                type: string
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              sshKeys:
                items:
                  type: string
                type: array
              tags:
                description: Tags is an optional set of tags to add to Packet resources
                  managed by the Packet provider.
                items:
                  type: string
                type: array
            required:
            - machineType
            - os
            type: object
          status:
            description: PacketMachineStatus defines the observed state of PacketMachine.
            properties:
              addresses:
                description: Addresses contains the Packet device associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the PacketMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: Any transient errors that occur during the reconciliation
                  of Machines can be added as events to the Machine object and/or
                  logged in the controller's output.
                type: string
              instanceStatus:
                description: InstanceStatus is the status of the Packet device instance
                  for this machine.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-packet-system/cluster-api-provider-packet-serving-cert
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
    cluster.x-k8s.io/v1beta1: v1beta1
  name: packetmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: cluster-api-provider-packet-webhook-service
          namespace: cluster-api-provider-packet-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: PacketMachineTemplate
    listKind: PacketMachineTemplateList
    plural: packetmachinetemplates
    shortNames:
    - pmt
    singular: packetmachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: PacketMachineTemplate is the Schema for the packetmachinetemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PacketMachineTemplateSpec defines the desired state of PacketMachineTemplate.
            properties:
              template:
                description: PacketMachineTemplateResource describes the data needed
                  to create am PacketMachine from a template.
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      billingCycle:
                        description: DeviceCreateInputBillingCycle The billing cycle
                          of the device.
                        type: string
                      facility:
                        description: Facility represents the Packet facility for this
                          machine. Override from the PacketCluster spec.
                        type: string
                      hardwareReservationID:
                        description: HardwareReservationID is the unique device hardware
                          reservation ID, a comma separated list of hardware reservation
                          IDs, or `next-available` to automatically let the Packet
                          api determine one.
                        type: string
                      ipxeURL:
                        description: IPXEUrl can be used to set the pxe boot url when
                          using custom OSes with this provider. Note that OS should
                          also be set to "custom_ipxe" if using this value.
                        type: string
                      machineType:
                        type: string
                      metro:
                        description: Metro represents the Packet metro for this machine
                          Override from the PacketCluster spec.
                        type: string
                      os:
                        type: string
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      sshKeys:
                        items:
                          type: string
                        type: array
                      tags:
                        description: Tags is an optional set of tags to add to Packet
                          resources managed by the Packet provider.
                        items:
                          type: string
                        type: array
                    required:
                    - machineType
                    - os
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
    control-plane: controller-manager
  name: cluster-api-provider-packet-controller-manager
  namespace: cluster-api-provider-packet-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
  name: cluster-api-provider-packet-leader-election-role
  namespace: cluster-api-provider-packet-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
  name: cluster-api-provider-packet-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - kubeadmconfigs
  - kubeadmconfigs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - machines
  - machines/status
  - machinesets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - packetclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - packetclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - packetmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - packetmachines/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
  name: cluster-api-provider-packet-leader-election-rolebinding
  namespace: cluster-api-provider-packet-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-api-provider-packet-leader-election-role
subjects:
- kind: ServiceAccount
  name: cluster-api-provider-packet-controller-manager
  namespace: cluster-api-provider-packet-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
  name: cluster-api-provider-packet-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-api-provider-packet-manager-role
subjects:
- kind: ServiceAccount
  name: cluster-api-provider-packet-controller-manager
  namespace: cluster-api-provider-packet-system
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
  name: cluster-api-provider-packet-manager-api-credentials
  namespace: cluster-api-provider-packet-system
stringData:
  PACKET_API_KEY: ${PACKET_API_KEY}
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
  name: cluster-api-provider-packet-webhook-service
  namespace: cluster-api-provider-packet-system
spec:
  ports:
  - port: 443
    targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-packet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
    control-plane: controller-manager
  name: cluster-api-provider-packet-controller-manager
  namespace: cluster-api-provider-packet-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-packet
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-packet
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --diagnostics-address=${CAPI_DIAGNOSTICS_ADDRESS:=:8443}
        - --insecure-diagnostics=${CAPI_INSECURE_DIAGNOSTICS:=false}
        command:
        - /manager
        envFrom:
        - secretRef:
            name: cluster-api-provider-packet-manager-api-credentials
        image: registry.arc.hcloud.io/bgrtest/cluster-api-provider-packet-amd64:dev
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsGroup: 65532
          runAsUser: 65532
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: cluster-api-provider-packet-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: cluster-api-provider-packet-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
  name: cluster-api-provider-packet-serving-cert
  namespace: cluster-api-provider-packet-system
spec:
  dnsNames:
  - cluster-api-provider-packet-webhook-service.cluster-api-provider-packet-system.svc
  - cluster-api-provider-packet-webhook-service.cluster-api-provider-packet-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: cluster-api-provider-packet-selfsigned-issuer
  secretName: cluster-api-provider-packet-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
  name: cluster-api-provider-packet-selfsigned-issuer
  namespace: cluster-api-provider-packet-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-packet-system/cluster-api-provider-packet-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
  name: cluster-api-provider-packet-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: cluster-api-provider-packet-webhook-service
      namespace: cluster-api-provider-packet-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-packetcluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.packetcluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - packetclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: cluster-api-provider-packet-webhook-service
      namespace: cluster-api-provider-packet-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-packetmachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.packetmachine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - packetmachines
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: cluster-api-provider-packet-webhook-service
      namespace: cluster-api-provider-packet-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-packetmachinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.packetmachinetemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - packetmachinetemplates
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-packet-system/cluster-api-provider-packet-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-packet
  name: cluster-api-provider-packet-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: cluster-api-provider-packet-webhook-service
      namespace: cluster-api-provider-packet-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-packetcluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.packetcluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - packetclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: cluster-api-provider-packet-webhook-service
      namespace: cluster-api-provider-packet-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-packetmachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.packetmachine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - packetmachines
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: cluster-api-provider-packet-webhook-service
      namespace: cluster-api-provider-packet-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-packetmachinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.packetmachinetemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - packetmachinetemplates
  sideEffects: None
